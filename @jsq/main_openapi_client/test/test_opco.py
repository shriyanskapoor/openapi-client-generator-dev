# coding: utf-8

"""
    Juniper Square Internal API

    An internal API for inter-service communication at JSQ.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from main_openapi_client.models.opco import Opco

class TestOpco(unittest.TestCase):
    """Opco unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Opco:
        """Test Opco
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Opco`
        """
        model = Opco()
        if include_optional:
            return Opco(
                opco_id = 56,
                opco_name = '',
                opco_currency = '',
                positions = [
                    main_openapi_client.models.opco_position.OpcoPosition(
                        id = 56, 
                        investor_group_name = '', 
                        status = '', 
                        ownership_percent = '', )
                    ]
            )
        else:
            return Opco(
                opco_id = 56,
                opco_name = '',
                opco_currency = '',
                positions = [
                    main_openapi_client.models.opco_position.OpcoPosition(
                        id = 56, 
                        investor_group_name = '', 
                        status = '', 
                        ownership_percent = '', )
                    ],
        )
        """

    def testOpco(self):
        """Test Opco"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
