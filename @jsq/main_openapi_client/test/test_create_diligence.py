# coding: utf-8

"""
    Juniper Square Internal API

    An internal API for inter-service communication at JSQ.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from main_openapi_client.models.create_diligence import CreateDiligence

class TestCreateDiligence(unittest.TestCase):
    """CreateDiligence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateDiligence:
        """Test CreateDiligence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateDiligence`
        """
        model = CreateDiligence()
        if include_optional:
            return CreateDiligence(
                arena_id = 6,
                user_id = 7,
                external_object_type = arena,
                external_object_id = 3,
                diligence_type = kyc,
                diligence_category = payments_onboarding_flow,
                business_info = main_openapi_client.models.create_diligence_business_info.CreateDiligence_business_info(),
                reference_external_object_type = account,
                reference_external_object_id = 3,
                other_info = {"key":"value"}
            )
        else:
            return CreateDiligence(
        )
        """

    def testCreateDiligence(self):
        """Test CreateDiligence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
