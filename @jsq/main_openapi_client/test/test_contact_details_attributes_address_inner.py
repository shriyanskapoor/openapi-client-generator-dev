# coding: utf-8

"""
    Juniper Square Internal API

    An internal API for inter-service communication at JSQ.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from main_openapi_client.models.contact_details_attributes_address_inner import ContactDetailsAttributesAddressInner

class TestContactDetailsAttributesAddressInner(unittest.TestCase):
    """ContactDetailsAttributesAddressInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContactDetailsAttributesAddressInner:
        """Test ContactDetailsAttributesAddressInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContactDetailsAttributesAddressInner`
        """
        model = ContactDetailsAttributesAddressInner()
        if include_optional:
            return ContactDetailsAttributesAddressInner(
                address = main_openapi_client.models.contact_details_attributes_address_inner_address.ContactDetails_attributes_address_inner_address(
                    city = 'ee', 
                    country = main_openapi_client.models.contact_details_attributes_address_inner_address_country.ContactDetails_attributes_address_inner_address_country(
                        object_id = 62, 
                        object_name = '', 
                        object_type = '', ), 
                    postal_code = '34253254234', 
                    state = main_openapi_client.models.contact_details_attributes_address_inner_address_state.ContactDetails_attributes_address_inner_address_state(
                        object_id = 56, 
                        object_name = 'dddd', 
                        object_type = '', ), 
                    street = 'as', 
                    street2 = 'dd', 
                    street3 = '', ),
                address_type = 1,
                id = 56
            )
        else:
            return ContactDetailsAttributesAddressInner(
        )
        """

    def testContactDetailsAttributesAddressInner(self):
        """Test ContactDetailsAttributesAddressInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
