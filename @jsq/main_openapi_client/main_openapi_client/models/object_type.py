# coding: utf-8

"""
    Juniper Square Internal API

    An internal API for inter-service communication at JSQ.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class ObjectType(str, Enum):
    """
    String representation of ObjectType enum
    """

    """
    allowed enum values
    """
    ARENA = 'arena'
    USER = 'user'
    CONTACT = 'contact'
    OFFERING = 'offering'
    PROSPECT = 'prospect'
    ACCOUNT = 'account'
    PROPERTY = 'property'
    COMM_PREF = 'comm_pref'
    POSITION = 'position'
    DOCUMENT = 'document'
    EMAIL_BATCH = 'email_batch'
    CAPITAL_CALL_BATCH = 'capital_call_batch'
    DISTRIBUTION_BATCH = 'distribution_batch'
    TRANSACTION = 'transaction'
    ASSET = 'asset'
    PROSPECT_CONTACT_MAP = 'prospect_contact_map'
    DATA_ROOM = 'data_room'
    NET_INCOME_BATCH = 'net_income_batch'
    PUBLICATION = 'publication'
    SUBSCRIPTION_BATCH = 'subscription_batch'
    SUBSCRIPTION = 'subscription'
    EVENT_LOG = 'event_log'
    PAYMENT_BATCH = 'payment_batch'
    MANAGEMENT_FEE_BATCH = 'management_fee_batch'
    TASK = 'task'
    LEAD = 'lead'
    CRM_NOTIFICATION_LIST = 'crm_notification_list'
    NAV_BATCH = 'nav_batch'
    LOAN = 'loan'
    ASSET_DATE_SAMPLED_DATA = 'asset_date_sampled_data'
    TRANSACTION_BATCH = 'transaction_batch'
    UNIT_VALUE = 'unit_value'
    UNIT_VALUE_BATCH = 'unit_value_batch'
    CAPITAL_CALL = 'capital_call'
    DISTRIBUTION = 'distribution'
    NET_INCOME = 'net_income'
    NAV = 'nav'
    NOTE = 'note'
    STORED_EMAIL = 'stored_email'
    EMAIL = 'email'
    INVESTOR_DILIGENCE = 'investor_diligence'
    WATCHLIST_SCREENING_DETAIL = 'watchlist_screening_detail'
    KYC_DETAIL = 'kyc_detail'
    KYC_DOCUMENT = 'kyc_document'
    KYC_DOCUMENT_VERSION = 'kyc_document_version'
    IMPORT_TEMPLATE = 'import_template'
    KYC_DOCUMENT_VERSION_ACTIVITY = 'kyc_document_version_activity'
    ACQUISITION = 'acquisition'
    DISPOSITION = 'disposition'
    FEATURE_FLAG = 'feature_flag'
    PAYMENT_PREF = 'payment_pref'
    DOCUMENT_CATEGORY = 'document_category'
    CONSOLIDATED_PAYMENT_BATCH = 'consolidated_payment_batch'
    E_SIGNATURE_DOCUMENT = 'e_signature_document'
    E_SIGNATURE_REQUEST_TEMPLATE = 'e_signature_request_template'
    E_SIGNATURE_GP_SIGNER = 'e_signature_gp_signer'
    E_SIGNATURE_REQUEST_BATCH = 'e_signature_request_batch'
    E_SIGNATURE_REQUEST = 'e_signature_request'
    E_SIGNATURE_REQUEST_RECIPIENT = 'e_signature_request_recipient'
    E_SIGNATURE_LP_SIGNER = 'e_signature_lp_signer'
    E_SIGNATURE_LP_CONFIGURATOR = 'e_signature_lp_configurator'
    PAYMENT = 'payment'
    BANK_ACCOUNT = 'bank_account'
    TWR_PERIOD_METRIC = 'twr_period_metric'
    FIELD_ACCESS_ROLE = 'field_access_role'
    FIELD_ACCESS_ROLE_OBJECT_MAP = 'field_access_role_object_map'
    LOCATION = 'location'
    PRODUCT_TYPE = 'product_type'
    DOCUMENT_FOLDER = 'document_folder'
    LP_CONSOLIDATION_REQUEST = 'lp_consolidation_request'
    FUND_ADMIN_SERVICE = 'fund_admin_service'
    ENTITY_COLLECTION = 'entity_collection'
    COMPLIANCE_PROFILE = 'compliance_profile'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ObjectType from a JSON string"""
        return cls(json.loads(json_str))


